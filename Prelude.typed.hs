import AST.AST
typed=Mod "Prelude" ["Prelude.map","Prelude.Cons","Prelude.id"] [] [Fun "False" (TCon "Prelude.Bool") (ELit (LA "false")),Fun "Prelude.Cons" (TApp (TApp (TCon "Prim.->") (TVar "a")) (TApp (TApp (TCon "Prim.->") (TApp (TCon "Prelude.List") (TVar "a"))) (TApp (TCon "Prelude.List") (TVar "a")))) (ELambda [PVar "x1",PVar "x2"] (ETuple [ELit (LA "cons"),EVar "x1",EVar "x2"])),Fun "Prelude.ET" (TCon "Prelude.ET") (ELit (LA "eT")),Fun "Prelude.Nil" (TApp (TCon "Prelude.List") (TVar "a")) (ELit (LA "nil")),Fun "Prelude.Ok" (TCon "Prelude.Ok") (ELit (LA "ok")),Fun "True" (TCon "Prelude.Bool") (ELit (LA "true")),Fun "Prelude.bif" (TApp (TApp (TCon "Prim.->") (TCon "Prim.String")) (TApp (TApp (TCon "Prim.->") (TCon "Prim.Number")) (TVar "a"))) (ELambda [PVar "s",PVar "n"] (EApp (EApp (EApp (EVar "Prim.apply") (ELit (LS "erlang"))) (EVar "s")) (EVar "n"))),Fun "Prelude.binop" (TApp (TApp (TCon "Prim.->") (TCon "Prim.String")) (TApp (TApp (TCon "Prim.->") (TVar "a")) (TApp (TApp (TCon "Prim.->") (TVar "b")) (TVar "c")))) (ELambda [PVar "s"] (EApp (EApp (EVar "Prelude.bif") (EVar "s")) (ELit (LI 2)))),Fun "Prelude.error" (TApp (TApp (TCon "Prim.->") (TCon "Prim.String")) (TVar "a")) (EApp (EApp (EVar "Prelude.bif") (ELit (LS "error"))) (ELit (LI 1))),Fun "Prelude.id" (TApp (TApp (TCon "Prim.->") (TVar "a")) (TVar "a")) (ELambda [PVar "x"] (EVar "x")),Fun "Prelude.map" (TApp (TApp (TCon "Prim.->") (TApp (TApp (TCon "Prim.->") (TVar "a")) (TVar "b"))) (TApp (TApp (TCon "Prim.->") (TApp (TCon "Prelude.List") (TVar "a"))) (TApp (TCon "Prelude.List") (TVar "b")))) (ELambda [PVar "f",PVar "xs"] (ECase (EVar "xs") [(PCon "Prelude.Nil" [],EVar "Prelude.Nil"),(PCon "Prelude.Cons" [PVar "xs",PVar "x"],EApp (EApp (EVar "Prelude.Cons") (EApp (EVar "f") (EVar "x"))) (EApp (EApp (EVar "Prelude.map") (EVar "f")) (EVar "xs")))])),Fun "Prelude.not" (TApp (TApp (TCon "Prim.->") (TCon "Prelude.Bool")) (TCon "Prelude.Bool")) (ELambda [PVar "_arg1"] (ECase (ETuple [EVar "_arg1"]) [(PTuple [PCon "True" []],EVar "False"),(PTuple [PCon "False" []],EVar "True")]))] (fromList [])