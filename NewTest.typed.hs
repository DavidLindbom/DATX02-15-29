import AST.AST
typed=Mod "NewTest" ["NewTest.sametype","NewTest.typetest","NewTest.typetest3","False","True"] [] [Fun "False" (TForAll (TCon "NewTest.Bool")) (ELit (LA "false")),Fun "True" (TForAll (TCon "NewTest.Bool")) (ELit (LA "true")),Fun "NewTest.sametype" (TForAll (TApp (TApp (TCon "Prim.->") (TVar "a")) (TApp (TApp (TCon "Prim.->") (TVar "a")) (TCon "NewTest.Bool")))) (ELambda [PVar "a",PVar "b"] (EVar "True")),Fun "NewTest.typetest" (TForAll (TVar "t2")) (EApp (EApp (EApp (EApp (EApp (EVar "Prim.apply") (ELit (LS "erlang"))) (ELit (LS "=:="))) (ELit (LI 2))) (ELit (LS ""))) (ELit (LI 3))),Fun "NewTest.typetest3" (TForAll (TVar "t2")) (EApp (EApp (EApp (EApp (EApp (EVar "Prim.apply") (ELit (LS "erlang"))) (ELit (LS "+"))) (ELit (LI 2))) (EVar "True")) (ELit (LS "")))] (fromList [])