import AST.AST
typed=Mod "HPR" ["HPR.add","HPR.three"] [] [Fun "False" (TCon "HPR.Bool") (ELit (LA "False")),Fun "True" (TCon "HPR.Bool") (ELit (LA "True")),Fun "HPR.add" (TApp (TApp (TCon "Prim.->") (TVar "a")) (TApp (TApp (TCon "Prim.->") (TVar "a")) (TVar "a"))) (ELambda [PVar "x",PVar "y"] (EApp (EApp (EApp (EApp (EApp (EVar "Prim.apply") (ELit (LS "erlang"))) (ELit (LS "+"))) (ELit (LI 2))) (EVar "x")) (EVar "y"))),Fun "HPR.loop" (TForAll (TApp (TApp (TCon "Prim.->") (TVar "t2")) (TVar "t3"))) (ELambda [PVar "x"] (EApp (EVar "HPR.loop") (EVar "x"))),Fun "HPR.three" (TCon "Prim.Number") (EApp (EApp (EVar "HPR.add") (ELit (LI 1))) (ELit (LI 2)))] (fromList [])