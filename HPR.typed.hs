import AST.AST
typed=Mod "HPR" ["HPR.add","HPR.three","HPR.mul","HPR.fac"] [] [Fun "False" (TCon "HPR.Bool") (ELit (LA "false")),Fun "True" (TCon "HPR.Bool") (ELit (LA "true")),Fun "HPR.add" (TApp (TApp (TCon "Prim.->") (TVar "a")) (TApp (TApp (TCon "Prim.->") (TVar "a")) (TVar "a"))) (ELambda [PVar "x",PVar "y"] (EApp (EApp (EApp (EApp (EApp (EVar "Prim.apply") (ELit (LS "erlang"))) (ELit (LS "+"))) (ELit (LI 2))) (EVar "x")) (EVar "y"))),Fun "HPR.bif" (TForAll (TApp (TApp (TCon "Prim.->") (TCon "Prim.String")) (TApp (TApp (TCon "Prim.->") (TCon "Prim.Number")) (TVar "t3")))) (EApp (EVar "Prim.apply") (ELit (LS "erlang"))),Fun "HPR.binop" (TApp (TApp (TCon "Prim.->") (TCon "HPR.Prim.String")) (TApp (TApp (TCon "Prim.->") (TVar "a")) (TApp (TApp (TCon "Prim.->") (TVar "b")) (TVar "c")))) (ELambda [PVar "s"] (EApp (EApp (EVar "HPR.bif") (EVar "s")) (ELit (LI 2)))),Fun "HPR.error" (TApp (TApp (TCon "Prim.->") (TVar "a")) (TVar "b")) (ELambda [PVar "s"] (EApp (EApp (EApp (EVar "HPR.bif") (ELit (LS "error"))) (ELit (LI 1))) (EVar "s"))),Fun "HPR.fac" (TApp (TApp (TCon "Prim.->") (TCon "Prim.Number")) (TCon "Prim.Number")) (ELambda [PVar "n"] (ECase (EApp (EApp (EVar "HPR.gr8r") (EVar "n")) (ELit (LI 0))) [(PCon "True" [],EApp (EApp (EVar "HPR.mul") (EVar "n")) (EApp (EVar "HPR.fac") (EApp (EApp (EVar "HPR.sub") (EVar "n")) (ELit (LI 1))))),(PCon "False" [],ELit (LI 1))])),Fun "HPR.gr8r" (TApp (TApp (TCon "Prim.->") (TVar "a")) (TApp (TApp (TCon "Prim.->") (TVar "a")) (TCon "HPR.Bool"))) (ELambda [PVar "a",PVar "b"] (EApp (EApp (EApp (EVar "HPR.binop") (ELit (LS ">"))) (EVar "a")) (EVar "b"))),Fun "HPR.loop" (TForAll (TApp (TApp (TCon "Prim.->") (TVar "t2")) (TVar "t3"))) (ELambda [PVar "x"] (EApp (EVar "HPR.loop") (EVar "x"))),Fun "HPR.mul" (TApp (TApp (TCon "Prim.->") (TVar "a")) (TApp (TApp (TCon "Prim.->") (TVar "a")) (TVar "a"))) (ELambda [PVar "x",PVar "y"] (EApp (EApp (EApp (EVar "HPR.binop") (ELit (LS "*"))) (EVar "x")) (EVar "y"))),Fun "HPR.sub" (TApp (TApp (TCon "Prim.->") (TVar "a")) (TApp (TApp (TCon "Prim.->") (TVar "a")) (TVar "a"))) (ELambda [PVar "x",PVar "y"] (EApp (EApp (EApp (EVar "HPR.binop") (ELit (LS "-"))) (EVar "x")) (EVar "y"))),Fun "HPR.three" (TCon "Prim.Number") (EApp (EApp (EVar "HPR.add") (ELit (LI 1))) (ELit (LI 2)))] (fromList [])