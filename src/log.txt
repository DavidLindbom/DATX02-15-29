

TCModule HPR [f,const,cool_cool] [(M,LitAST (AtomL "M"),ConT M),(const,LamAST [VarPat X@1,VarPat X@2] (CaseAST (TupleAST [Named X@1,Named X@2]) [(TuplePat [AsPat (VarPat X@1) (LitPat (StringL "String")),AsPat (VarPat X@2) (VarPat x)],CaseAST (Named x) [(LitPat (IntegerL 3),LitAST (StringL "ok")),(LitPat (IntegerL 2),LitAST (StringL "bah, humbug!"))])]),AppT (AppT (ConT Prim.->) (ConT Prim.String)) (AppT (AppT (ConT Prim.->) (ConT Prim.Integer)) (ConT Prim.String))),(cool_cool,LamAST [] (CaseAST (TupleAST []) [(TuplePat [],Named M)]),ConT M),(f,LamAST [] (CaseAST (TupleAST []) [(TuplePat [],LitAST (IntegerL 3))]),ConT Prim.Integer)]



TCModule HPR [f,const,cool_cool] [(M,LitAST (AtomL "M"),ConT M),(const,LamAST [VarPat X@1,VarPat X@2] (CaseAST (TupleAST [Named X@1,Named X@2]) [(TuplePat [AsPat (VarPat X@1) (LitPat (StringL "String")),AsPat (VarPat X@2) (VarPat x)],CaseAST (LitAST (IntegerL 2)) [(LitPat (IntegerL 3),LitAST (StringL "ok")),(LitPat (IntegerL 2),LitAST (StringL "bah, humbug!"))])]),ForallT (AppT (AppT (ConT Prim.->) (ConT Prim.String)) (AppT (AppT (ConT Prim.->) (VarT t2)) (ConT Prim.String)))),(cool_cool,LamAST [] (CaseAST (TupleAST []) [(TuplePat [],Named M)]),ConT M),(f,LamAST [] (CaseAST (TupleAST []) [(TuplePat [],LitAST (IntegerL 3))]),ConT Prim.Integer)]



TCModule HPR [f,const,cool_cool] [(M,LitAST (AtomL "M"),ConT M),(const,LamAST [VarPat X@1,VarPat X@2] (CaseAST (TupleAST [Named X@1,Named X@2]) [(TuplePat [AsPat (VarPat X@1) (LitPat (StringL "String")),AsPat (VarPat X@2) (VarPat x)],CaseAST (LitAST (DoubleL 2.0)) [(LitPat (DoubleL 3.0),LitAST (StringL "ok")),(LitPat (DoubleL 2.0),LitAST (StringL "bah, humbug!"))])]),ForallT (AppT (AppT (ConT Prim.->) (ConT Prim.String)) (AppT (AppT (ConT Prim.->) (VarT t2)) (ConT Prim.String)))),(cool_cool,LamAST [] (CaseAST (TupleAST []) [(TuplePat [],Named M)]),ConT M),(f,LamAST [] (CaseAST (TupleAST []) [(TuplePat [],LitAST (IntegerL 3))]),ConT Prim.Integer)]

